/*
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'

android {
    compileSdkVersion rootProject.compileSdkVersion
    buildToolsVersion rootProject.buildToolsVersion

    useLibrary 'org.apache.http.legacy'

    targetCompatibility = targetCompatibilityVersion
    sourceCompatibility = sourceCompatibilityVersion

    defaultConfig {
        minSdkVersion rootProject.minSdkVersion
        targetSdkVersion rootProject.targetSdkVersion

        multiDexEnabled true
        testInstrumentationRunner 'androidx.test.runner.AndroidJUnitRunner'
    }

    // TODO(#62): Re-enable abort on error.
    lintOptions {
        abortOnError false
    }

    buildFeatures {
        compose true
    }
    composeOptions {
        kotlinCompilerExtensionVersion '1.3.0-beta01'
    }
}

dependencies {
    implementation project(':litho-core')
    implementation project(':litho-core-kotlin')
    implementation project(':litho-widget')
    implementation project(':litho-widget-kotlin')
    implementation project(':litho-fresco')
    implementation project(':litho-fresco-kotlin')
    implementation project(':litho-sections-core')
    implementation project(':litho-sections-widget')
    implementation project(':litho-editor-core')
    implementation project(':litho-editor-flipper')
    compileOnly project(':litho-sections-annotations')
    kapt project(':litho-processor')
    kapt project(':litho-sections-processor')

    // First-party
    implementation deps.soloader
    implementation deps.flipper
    implementation deps.flipperLithoPlugin
    implementation deps.fresco
    implementation deps.guava

    // Annotations
    compileOnly deps.jsr305
    compileOnly deps.inferAnnotations

    // Support Library
    implementation deps.kotlinStandardLib
    implementation deps.supportAppCompat
    implementation deps.supportFragment
    implementation deps.supportRecyclerView
    implementation deps.supportSwipeRefresh
    implementation deps.supportTransition
    implementation deps.archLifecycle

    // Integration with activities
    implementation 'androidx.activity:activity-compose:1.6.0-rc01'
    // Compose Material Design
    implementation 'androidx.compose.material:material:1.3.0-beta01'
    // Animations
    implementation 'androidx.compose.animation:animation:1.3.0-beta01'
    // Tooling support (Previews, etc.)
    implementation 'androidx.compose.ui:ui-tooling:1.3.0-beta01'
    // Integration with ViewModels
    implementation 'androidx.lifecycle:lifecycle-viewmodel-compose:2.6.0-alpha01'
    // Runtime
    implementation 'androidx.compose.runtime:runtime:1.3.0-beta01'

    /*tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).configureEach {
        kotlinOptions {
            // Treat all Kotlin warnings as errors
            //allWarningsAsErrors = true
            freeCompilerArgs += '-Xopt-in=kotlin.RequiresOptIn'
            // Enable experimental coroutines APIs, including Flow
            freeCompilerArgs += '-Xopt-in=kotlin.Experimental'
            //freeCompilerArgs += '-Xallow-jvm-ir-dependencies'

            // Set JVM target to 1.8
            jvmTarget = "1.8"
        }
    }*/

    // Integration test only
    androidTestImplementation project(':litho-espresso')
    androidTestImplementation deps.supportEspresso
    androidTestImplementation deps.supportEspressoIntents
    androidTestImplementation deps.junit

    // Unit test only
    testImplementation project(':litho-testing')
    testCompileOnly deps.jsr305
    testAnnotationProcessor project(':litho-processor')
    kaptTest project(':litho-processor')
    testImplementation deps.junit
    testImplementation deps.hamcrestLibrary
    testImplementation deps.robolectric
    testImplementation deps.supportTestCore
    testImplementation deps.assertjCore
    testImplementation deps.mockitoCore
}
