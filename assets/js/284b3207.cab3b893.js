"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[4541],{3905:(n,e,t)=>{t.r(e),t.d(e,{MDXContext:()=>l,MDXProvider:()=>c,mdx:()=>g,useMDXComponents:()=>p,withMDXComponents:()=>d});var a=t(67294);function i(n,e,t){return e in n?Object.defineProperty(n,e,{value:t,enumerable:!0,configurable:!0,writable:!0}):n[e]=t,n}function o(){return o=Object.assign||function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var a in t)Object.prototype.hasOwnProperty.call(t,a)&&(n[a]=t[a])}return n},o.apply(this,arguments)}function r(n,e){var t=Object.keys(n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(n);e&&(a=a.filter((function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable}))),t.push.apply(t,a)}return t}function s(n){for(var e=1;e<arguments.length;e++){var t=null!=arguments[e]?arguments[e]:{};e%2?r(Object(t),!0).forEach((function(e){i(n,e,t[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(t)):r(Object(t)).forEach((function(e){Object.defineProperty(n,e,Object.getOwnPropertyDescriptor(t,e))}))}return n}function m(n,e){if(null==n)return{};var t,a,i=function(n,e){if(null==n)return{};var t,a,i={},o=Object.keys(n);for(a=0;a<o.length;a++)t=o[a],e.indexOf(t)>=0||(i[t]=n[t]);return i}(n,e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(n);for(a=0;a<o.length;a++)t=o[a],e.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(n,t)&&(i[t]=n[t])}return i}var l=a.createContext({}),d=function(n){return function(e){var t=p(e.components);return a.createElement(n,o({},e,{components:t}))}},p=function(n){var e=a.useContext(l),t=e;return n&&(t="function"==typeof n?n(e):s(s({},e),n)),t},c=function(n){var e=p(n.components);return a.createElement(l.Provider,{value:e},n.children)},h={inlineCode:"code",wrapper:function(n){var e=n.children;return a.createElement(a.Fragment,{},e)}},u=a.forwardRef((function(n,e){var t=n.components,i=n.mdxType,o=n.originalType,r=n.parentName,l=m(n,["components","mdxType","originalType","parentName"]),d=p(t),c=i,u=d["".concat(r,".").concat(c)]||d[c]||h[c]||o;return t?a.createElement(u,s(s({ref:e},l),{},{components:t})):a.createElement(u,s({ref:e},l))}));function g(n,e){var t=arguments,i=e&&e.mdxType;if("string"==typeof n||i){var o=t.length,r=new Array(o);r[0]=u;var s={};for(var m in e)hasOwnProperty.call(e,m)&&(s[m]=e[m]);s.originalType=n,s.mdxType="string"==typeof n?n:i,r[1]=s;for(var l=2;l<o;l++)r[l]=t[l];return a.createElement.apply(null,r)}return a.createElement.apply(null,t)}u.displayName="MDXCreateElement"},36873:(n,e,t)=>{t.r(e),t.d(e,{assets:()=>p,contentTitle:()=>l,default:()=>u,frontMatter:()=>m,metadata:()=>d,toc:()=>c});var a=t(83117),i=t(80102),o=(t(67294),t(3905)),r=t(44996),s=["components"],m={id:"transition-choreography",title:"Customizing Transitions"},l=void 0,d={unversionedId:"animations/transition-choreography",id:"animations/transition-choreography",title:"Customizing Transitions",description:"Litho provides several APIs to customise many aspects of transitions and animate different components together.",source:"@site/../docs/animations/transition-choreography.mdx",sourceDirName:"animations",slug:"/animations/transition-choreography",permalink:"/docs/animations/transition-choreography",draft:!1,editUrl:"https://github.com/facebook/litho/edit/master/website/../docs/animations/transition-choreography.mdx",tags:[],version:"current",frontMatter:{id:"transition-choreography",title:"Customizing Transitions"},sidebar:"mainSidebar",previous:{title:"Animating All Layout",permalink:"/docs/animations/transition-all-layout"},next:{title:"Animating View Properties with Dynamic Props",permalink:"/docs/animations/dynamic-props"}},p={},c=[{value:"Sequence, Stagger, and Parallel Sets",id:"sequence-stagger-and-parallel-sets",level:2},{value:"Animators",id:"animators",level:2},{value:"Transition End Callback",id:"transition-end-callback",level:3}],h={toc:c};function u(n){var e=n.components,t=(0,i.Z)(n,s);return(0,o.mdx)("wrapper",(0,a.Z)({},h,t,{components:e,mdxType:"MDXLayout"}),(0,o.mdx)("p",null,"Litho provides several APIs to customise many aspects of transitions and animate different components together."),(0,o.mdx)("h2",{id:"sequence-stagger-and-parallel-sets"},"Sequence, Stagger, and Parallel Sets"),(0,o.mdx)("p",null,"Transitions can be composed using the following:"),(0,o.mdx)("ul",null,(0,o.mdx)("li",{parentName:"ul"},(0,o.mdx)("inlineCode",{parentName:"li"},"Sequence")," - all transitions are run in order. Each transition must end before the following one starts."),(0,o.mdx)("li",{parentName:"ul"},(0,o.mdx)("inlineCode",{parentName:"li"},"Stagger")," - all transitions are a run in order. There is a fixed delay between starting each transition, and they may overlap."),(0,o.mdx)("li",{parentName:"ul"},(0,o.mdx)("inlineCode",{parentName:"li"},"Parallel")," - all transitions start at the same time but may end at different times.")),(0,o.mdx)("p",null,"The following code uses a ",(0,o.mdx)("inlineCode",{parentName:"p"},"stagger")," set to animate three different rectangles."),(0,o.mdx)("pre",null,(0,o.mdx)("code",{parentName:"pre",className:"language-java",metastring:"file=sample/src/main/java/com/facebook/samples/litho/java/animations/docs/StaggerTransitionComponentSpec.java start=start end=end",file:"sample/src/main/java/com/facebook/samples/litho/java/animations/docs/StaggerTransitionComponentSpec.java",start:"start",end:"end"},'@LayoutSpec\npublic class StaggerTransitionComponentSpec {\n  private static final String YELLOW_KEY = "YELLOW_KEY";\n  private static final String BLUE_KEY = "BLUE_KEY";\n  private static final String PURPLE_KEY = "PURPLE_KEY";\n  private static final int PURPLE_COLOR = Color.rgb(144, 29, 191);\n\n  @OnCreateLayout\n  static Component onCreateLayout(ComponentContext c, @State boolean shown) {\n    return Row.create(c)\n        .heightPercent(100)\n        .child(\n            Row.create(c)\n                .child(\n                    SolidColor.create(c)\n                        .widthDip(90)\n                        .heightDip(40)\n                        .transitionKey(YELLOW_KEY)\n                        .color(Color.YELLOW))\n                .child(\n                    SolidColor.create(c)\n                        .widthDip(90)\n                        .heightDip(40)\n                        .transitionKey(BLUE_KEY)\n                        .color(Color.BLUE))\n                .child(\n                    SolidColor.create(c)\n                        .widthDip(90)\n                        .heightDip(40)\n                        .transitionKey(PURPLE_KEY)\n                        .color(PURPLE_COLOR)))\n        .clickHandler(StaggerTransitionComponent.onClickEvent(c))\n        .alignItems(shown ? YogaAlign.FLEX_END : YogaAlign.FLEX_START)\n        .build();\n  }\n\n  @OnCreateTransition\n  static Transition onCreateTransition(ComponentContext c) {\n    return Transition.stagger(\n        100,\n        Transition.create(YELLOW_KEY).animate(AnimatedProperties.Y),\n        Transition.create(BLUE_KEY).animate(AnimatedProperties.Y),\n        Transition.create(PURPLE_KEY).animate(AnimatedProperties.Y));\n  }\n\n  @OnEvent(ClickEvent.class)\n  static void onClickEvent(ComponentContext c, @FromEvent View view) {\n    StaggerTransitionComponent.onUpdateState(c);\n  }\n\n  @OnUpdateState\n  static void onUpdateState(StateValue<Boolean> shown) {\n    shown.set(!shown.get());\n  }\n}\n')),(0,o.mdx)("p",null,"The following animation shows the above LayoutSpec in action."),(0,o.mdx)("video",{loop:"true",autoplay:"true",class:"video",width:"100%",height:"500px"},(0,o.mdx)("source",{type:"video/webm",src:(0,r.default)("/videos/transitions/stagger.webm")}),(0,o.mdx)("p",null,"Your browser does not support the video element.")),(0,o.mdx)("p",null,"Transition sets can be nested within each other, for example, you could have a 'stagger' of 'parallel' animation sets."),(0,o.mdx)("p",null,"Sequences and Staggers support interrupting behaviour, which ensure a component will never jump and will always end up in the correct end position."),(0,o.mdx)("p",null,"The sets can also be used to animate different properties of the same component, as shown in the following example:"),(0,o.mdx)("pre",null,(0,o.mdx)("code",{parentName:"pre",className:"language-java",metastring:"file=sample/src/main/java/com/facebook/samples/litho/java/animations/docs/StaggerTransitionSameComponentSpec.java start=start end=end",file:"sample/src/main/java/com/facebook/samples/litho/java/animations/docs/StaggerTransitionSameComponentSpec.java",start:"start",end:"end"},'@LayoutSpec\npublic class StaggerTransitionSameComponentSpec {\n  private static final String YELLOW_KEY = "YELLOW_KEY";\n\n  @OnCreateLayout\n  static Component onCreateLayout(ComponentContext c, @State boolean shown) {\n    return Row.create(c)\n        .heightPercent(100)\n        .child(\n            Row.create(c)\n                .child(\n                    SolidColor.create(c)\n                        .widthDip(90)\n                        .heightDip(40)\n                        .transitionKey(YELLOW_KEY)\n                        .color(Color.YELLOW)))\n        .clickHandler(StaggerTransitionSameComponent.onClickEvent(c))\n        .justifyContent(shown ? YogaJustify.FLEX_END : YogaJustify.FLEX_START)\n        .alignItems(shown ? YogaAlign.FLEX_END : YogaAlign.FLEX_START)\n        .build();\n  }\n\n  @OnCreateTransition\n  static Transition onCreateTransition(ComponentContext c) {\n    return Transition.stagger(\n        50,\n        Transition.create(YELLOW_KEY).animate(AnimatedProperties.Y),\n        Transition.create(YELLOW_KEY).animate(AnimatedProperties.X));\n  }\n\n  @OnEvent(ClickEvent.class)\n  static void onClickEvent(ComponentContext c, @FromEvent View view) {\n    StaggerTransitionSameComponent.onUpdateState(c);\n  }\n\n  @OnUpdateState\n  static void onUpdateState(StateValue<Boolean> shown) {\n    shown.set(!shown.get());\n  }\n}\n')),(0,o.mdx)("p",null,"The following animation shows the above LayoutSpec in action."),(0,o.mdx)("video",{loop:"true",autoplay:"true",class:"video",width:"100%",height:"500px"},(0,o.mdx)("source",{type:"video/webm",src:(0,r.default)("/videos/transitions/stagger3.webm")}),(0,o.mdx)("p",null,"Your browser does not support the video element.")),(0,o.mdx)("h2",{id:"animators"},"Animators"),(0,o.mdx)("p",null,"Animators affect the rate in which new values are pushed to the animated components. An ",(0,o.mdx)("inlineCode",{parentName:"p"},"Animator")," can be added to any transition with the ",(0,o.mdx)("inlineCode",{parentName:"p"},".animator()")," builder setting."),(0,o.mdx)("p",null,"Litho provides two Animators:"),(0,o.mdx)("ul",null,(0,o.mdx)("li",{parentName:"ul"},(0,o.mdx)("strong",{parentName:"li"},"Spring-based")," - see the ",(0,o.mdx)("a",{parentName:"li",href:"pathname:///javadoc/com/facebook/litho/Transition.SpringTransitionAnimator.html"},"SpringTransitionAnimator")),(0,o.mdx)("li",{parentName:"ul"},(0,o.mdx)("strong",{parentName:"li"},"Timing-based")," - see the ",(0,o.mdx)("a",{parentName:"li",href:"pathname:///javadoc/com/facebook/litho/Transition.TimingTransitionAnimator.html"},"TimingTransitionAnimator"))),(0,o.mdx)("p",null,"These Animators can be configured to cover most use cases."),(0,o.mdx)("p",null,"It's possible to configure a custom transition by implementing ",(0,o.mdx)("a",{parentName:"p",href:"pathname:///javadoc/com/facebook/litho/Transition.TransitionAnimator.html"},"Transition.TransitionAnimator"),"."),(0,o.mdx)("p",null,"By default, all transitions in Litho run by the ",(0,o.mdx)("a",{parentName:"p",href:"pathname:///javadoc/com/facebook/litho/Transition.SpringTransitionAnimator.html"},"SpringTransitionAnimator"),", which is physics based and naturally interruptible. You can tune the parameters of this spring by creating another ",(0,o.mdx)("inlineCode",{parentName:"p"},"Animator")," using ",(0,o.mdx)("inlineCode",{parentName:"p"},"Transition.springWith()")," and pass custom tension and friction."),(0,o.mdx)("p",null,"In addition, the ",(0,o.mdx)("a",{parentName:"p",href:"pathname:///javadoc/com/facebook/litho/Transition.TimingTransitionAnimator.html"},"TimingTransitionAnimator")," enables you to set a total time and an ",(0,o.mdx)("inlineCode",{parentName:"p"},"Interpolator"),". To do this, use the builder ",(0,o.mdx)("inlineCode",{parentName:"p"},"Transition.timing()")," that receives the total time and an optional ",(0,o.mdx)("inlineCode",{parentName:"p"},"Interpolator"),"."),(0,o.mdx)("div",{className:"admonition admonition-info alert alert--info"},(0,o.mdx)("div",{parentName:"div",className:"admonition-heading"},(0,o.mdx)("h5",{parentName:"div"},(0,o.mdx)("span",{parentName:"h5",className:"admonition-icon"},(0,o.mdx)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,o.mdx)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"info")),(0,o.mdx)("div",{parentName:"div",className:"admonition-content"},(0,o.mdx)("p",{parentName:"div"},"The default interpolator for the ",(0,o.mdx)("a",{parentName:"p",href:"pathname:///javadoc/com/facebook/litho/Transition.TimingTransitionAnimator.html"},"TimingTransitionAnimator")," is an ",(0,o.mdx)("inlineCode",{parentName:"p"},"AccelerateDecelerateInterpolator"),"."))),(0,o.mdx)("pre",null,(0,o.mdx)("code",{parentName:"pre",className:"language-java",metastring:"file=sample/src/main/java/com/facebook/samples/litho/java/animations/docs/ParallelTransitionWithAnimatorsComponentSpec.java start=start end=end",file:"sample/src/main/java/com/facebook/samples/litho/java/animations/docs/ParallelTransitionWithAnimatorsComponentSpec.java",start:"start",end:"end"},"@OnCreateTransition\nstatic Transition onCreateTransition(ComponentContext c) {\n  return Transition.parallel(\n      Transition.create(YELLOW_KEY)\n          .animate(AnimatedProperties.Y)\n          .animator(Transition.springWithConfig(120, 12)),\n      Transition.create(BLUE_KEY).animate(AnimatedProperties.Y).animator(Transition.timing(1000)),\n      Transition.create(PURPLE_KEY)\n          .animate(AnimatedProperties.Y)\n          .animator(Transition.timing(1000, new BounceInterpolator())));\n}\n")),(0,o.mdx)("p",null,"The following animation shows the above ComponentSpec in action."),(0,o.mdx)("video",{loop:"true",autoplay:"true",class:"video",width:"100%",height:"500px"},(0,o.mdx)("source",{type:"video/webm",src:(0,r.default)("/videos/transitions/stagger4.webm")}),(0,o.mdx)("p",null,"Your browser does not support the video element.")),(0,o.mdx)("h3",{id:"transition-end-callback"},"Transition End Callback"),(0,o.mdx)("p",null,"A Listener can be added to receive a callback when an individual transition has ended. This is done through Litho event dispatcher methods (see ",(0,o.mdx)("a",{parentName:"p",href:"/docs/codegen/events-for-specs"},"Events Overview"),"."),(0,o.mdx)("p",null,"The ",(0,o.mdx)("inlineCode",{parentName:"p"},"TransitionEndEvent")," will be called with the transition key and the specific ",(0,o.mdx)("inlineCode",{parentName:"p"},"AnimatedProperty")," that has been animated for that key. If multiple instances of ",(0,o.mdx)("inlineCode",{parentName:"p"},"AnimatedProperty")," are added to the same transition, and all of them run at the same time, a callback will be executed for each. This callback may be useful to loop animations by updating the tree."),(0,o.mdx)("pre",null,(0,o.mdx)("code",{parentName:"pre",className:"language-java",metastring:"file=sample/src/main/java/com/facebook/samples/litho/java/animations/docs/SequenceTransitionLoopComponentSpec.java start=start end=end",file:"sample/src/main/java/com/facebook/samples/litho/java/animations/docs/SequenceTransitionLoopComponentSpec.java",start:"start",end:"end"},"@OnEvent(TransitionEndEvent.class)\nstatic void onTransitionEndEvent(\n    ComponentContext c,\n    @FromEvent String transitionKey,\n    @FromEvent AnimatedProperty property,\n    @State boolean isLooping) {\n  SequenceTransitionLoopComponent.onUpdateState(c, false);\n}\n\n@OnCreateTransition\nstatic Transition onCreateTransition(ComponentContext c) {\n  return Transition.sequence(\n      Transition.create(YELLOW_KEY).animate(AnimatedProperties.Y),\n      Transition.create(BLUE_KEY).animate(AnimatedProperties.Y),\n      Transition.create(PURPLE_KEY)\n          .animate(AnimatedProperties.Y)\n          .transitionEndHandler(SequenceTransitionLoopComponent.onTransitionEndEvent(c)));\n}\n")),(0,o.mdx)("div",{className:"admonition admonition-note alert alert--secondary"},(0,o.mdx)("div",{parentName:"div",className:"admonition-heading"},(0,o.mdx)("h5",{parentName:"div"},(0,o.mdx)("span",{parentName:"h5",className:"admonition-icon"},(0,o.mdx)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,o.mdx)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),(0,o.mdx)("div",{parentName:"div",className:"admonition-content"},(0,o.mdx)("p",{parentName:"div"},"Many examples can be found in the Litho Sample app: ",(0,o.mdx)("inlineCode",{parentName:"p"},"API Demos"),"->",(0,o.mdx)("inlineCode",{parentName:"p"},"Animation Callbacks"),"."))),(0,o.mdx)("p",null,"You can also add the transition end handler to ",(0,o.mdx)("inlineCode",{parentName:"p"},"Transition.allLayout()")," where the same logic applies:"),(0,o.mdx)("pre",null,(0,o.mdx)("code",{parentName:"pre",className:"language-java"},"@OnCreateTransition\nstatic Transition onCreateTransition(ComponentContext c) {\n    return Transition.allLayout().transitionEndHandler(MyComponentSpec.onTransitionEndEvent(c));\n}\n")))}u.isMDXComponent=!0}}]);