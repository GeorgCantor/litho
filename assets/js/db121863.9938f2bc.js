"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[2632],{3905:(e,t,n)=>{n.r(t),n.d(t,{MDXContext:()=>m,MDXProvider:()=>l,mdx:()=>g,useMDXComponents:()=>d,withMDXComponents:()=>c});var r=n(67294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(){return a=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},a.apply(this,arguments)}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function p(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var m=r.createContext({}),c=function(e){return function(t){var n=d(t.components);return r.createElement(e,a({},t,{components:n}))}},d=function(e){var t=r.useContext(m),n=t;return e&&(n="function"==typeof e?e(t):p(p({},t),e)),n},l=function(e){var t=d(e.components);return r.createElement(m.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},h=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,i=e.parentName,m=s(e,["components","mdxType","originalType","parentName"]),c=d(n),l=o,h=c["".concat(i,".").concat(l)]||c[l]||u[l]||a;return n?r.createElement(h,p(p({ref:t},m),{},{components:n})):r.createElement(h,p({ref:t},m))}));function g(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,i=new Array(a);i[0]=h;var p={};for(var s in t)hasOwnProperty.call(t,s)&&(p[s]=t[s]);p.originalType=e,p.mdxType="string"==typeof e?e:o,i[1]=p;for(var m=2;m<a;m++)i[m]=n[m];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}h.displayName="MDXCreateElement"},79450:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>s,default:()=>u,frontMatter:()=>p,metadata:()=>m,toc:()=>d});var r=n(83117),o=n(80102),a=(n(67294),n(3905)),i=["components"],p={id:"testing-treeprops",title:"Matching @TreeProp"},s=void 0,m={unversionedId:"testing/testing-treeprops",id:"testing/testing-treeprops",title:"Matching @TreeProp",description:"For help with setting up the test environment, see the Getting Started page.",source:"@site/../docs/testing/testing-treeprops.mdx",sourceDirName:"testing",slug:"/testing/testing-treeprops",permalink:"/docs/testing/testing-treeprops",draft:!1,editUrl:"https://github.com/facebook/litho/edit/master/website/../docs/testing/testing-treeprops.mdx",tags:[],version:"current",frontMatter:{id:"testing-treeprops",title:"Matching @TreeProp"}},c={},d=[{value:"Testing components with @TreeProp",id:"testing-components-with-treeprop",level:2}],l={toc:d};function u(e){var t=e.components,n=(0,o.Z)(e,i);return(0,a.mdx)("wrapper",(0,r.Z)({},l,n,{components:t,mdxType:"MDXLayout"}),(0,a.mdx)("div",{className:"admonition admonition-tip alert alert--success"},(0,a.mdx)("div",{parentName:"div",className:"admonition-heading"},(0,a.mdx)("h5",{parentName:"div"},(0,a.mdx)("span",{parentName:"h5",className:"admonition-icon"},(0,a.mdx)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,a.mdx)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"Tips")),(0,a.mdx)("div",{parentName:"div",className:"admonition-content"},(0,a.mdx)("p",{parentName:"div"},"For help with setting up the test environment, see the ",(0,a.mdx)("a",{parentName:"p",href:"/docs/testing/unit-testing"},"Getting Started")," page."),(0,a.mdx)("p",{parentName:"div"},"Before learning about ",(0,a.mdx)("inlineCode",{parentName:"p"},"@TreeProp")," matching, it's recommended you become familiar with ",(0,a.mdx)("a",{parentName:"p",href:"/docs/testing/subcomponent-testing"},"sub-component testing"),"."))),(0,a.mdx)("h2",{id:"testing-components-with-treeprop"},"Testing components with @TreeProp"),(0,a.mdx)("p",null,"While ",(0,a.mdx)("inlineCode",{parentName:"p"},"@Prop"),"s are received from the immediate parent, ",(0,a.mdx)("a",{parentName:"p",href:"/docs/codegen/passing-data-to-components/treeprops"},(0,a.mdx)("inlineCode",{parentName:"a"},"@TreeProp")),"s can be passed down to a component from any of its ancestors in the current component hierarchy. When testing hierarchies containing components that contain ",(0,a.mdx)("inlineCode",{parentName:"p"},"@TreeProp"),", the TreeProp should be passed down to the components as expected. Following is an example LayoutSpec:"),(0,a.mdx)("pre",null,(0,a.mdx)("code",{parentName:"pre",className:"language-java"},"@LayoutSpec\nclass ComponentWithTreePropSpec {\n  @OnCreateLayout\n  static Component onCreateLayout(\n      ComponentContext c,\n      @Prop String normalProp,\n      @TreeProp UserContext userContext) { // <- Passed down by an ancestor.\n    // ...\n  }\n}\n")),(0,a.mdx)("p",null,"To test a component that uses ",(0,a.mdx)("inlineCode",{parentName:"p"},"@TreeProp"),"s, you can use ",(0,a.mdx)("inlineCode",{parentName:"p"},"LithoViewRule#setTreeProp(Class, Object)"),". This will set ",(0,a.mdx)("inlineCode",{parentName:"p"},"@TreeProp"),"s on the hierachy, making them available to the components:"),(0,a.mdx)("pre",null,(0,a.mdx)("code",{parentName:"pre",className:"language-java"},"@RunWith(LithoTestRunner.class)\npublic class ComponentWithTreePropTest {\n\n  public final @Rule LithoViewRule mLithoViewRule = new LithoViewRule();\n\n  @Test\n  public void test() {\n    final ComponentContext c = mLithoViewRule.getContext();\n    final Component component = ComponentWithTreeProp.create(c).build();\n\n    mLithoViewRule\n      .attachToWindow()\n      .setTreeProp(UserContext.class, new UserContext()) // setting tree props for the hierarchy.\n      .setRoot(component)\n      .measure()\n      .layout();\n\n    // test assertions as usual\n  }\n}\n")),(0,a.mdx)("div",{className:"admonition admonition-info alert alert--info"},(0,a.mdx)("div",{parentName:"div",className:"admonition-heading"},(0,a.mdx)("h5",{parentName:"div"},(0,a.mdx)("span",{parentName:"h5",className:"admonition-icon"},(0,a.mdx)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,a.mdx)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"info")),(0,a.mdx)("div",{parentName:"div",className:"admonition-content"},(0,a.mdx)("p",{parentName:"div"},(0,a.mdx)("inlineCode",{parentName:"p"},"@TestSpec")," does not support matching ",(0,a.mdx)("inlineCode",{parentName:"p"},"@TreeProp"),"."))))}u.isMDXComponent=!0}}]);