"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[3694],{3905:(e,t,n)=>{n.r(t),n.d(t,{MDXContext:()=>s,MDXProvider:()=>d,mdx:()=>g,useMDXComponents:()=>m,withMDXComponents:()=>p});var r=n(67294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(){return a=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},a.apply(this,arguments)}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var s=r.createContext({}),p=function(e){return function(t){var n=m(t.components);return r.createElement(e,a({},t,{components:n}))}},m=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},d=function(e){var t=m(e.components);return r.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},y=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,i=e.parentName,s=c(e,["components","mdxType","originalType","parentName"]),p=m(n),d=o,y=p["".concat(i,".").concat(d)]||p[d]||u[d]||a;return n?r.createElement(y,l(l({ref:t},s),{},{components:n})):r.createElement(y,l({ref:t},s))}));function g(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,i=new Array(a);i[0]=y;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l.mdxType="string"==typeof e?e:o,i[1]=l;for(var s=2;s<a;s++)i[s]=n[s];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}y.displayName="MDXCreateElement"},50586:(e,t,n)=>{n.r(t),n.d(t,{frontMatter:()=>l,contentTitle:()=>c,metadata:()=>s,toc:()=>p,default:()=>d});var r=n(87462),o=n(63366),a=(n(67294),n(3905)),i=["components"],l={id:"coding-style",title:"Coding Style"},c=void 0,s={unversionedId:"best-practices/coding-style",id:"best-practices/coding-style",isDocsHomePage:!1,title:"Coding Style",description:"This page contains Best Practice guidelines for styling your code.",source:"@site/../docs/best-practices/coding-style.md",sourceDirName:"best-practices",slug:"/best-practices/coding-style",permalink:"/docs/best-practices/coding-style",editUrl:"https://github.com/facebook/litho/edit/master/website/../docs/best-practices/coding-style.md",tags:[],version:"current",frontMatter:{id:"coding-style",title:"Coding Style"},sidebar:"mainSidebar",previous:{title:"Communicating Between Components",permalink:"/docs/mainconcepts/coordinate-state-actions/communicating-between-components"}},p=[{value:"Guidelines",id:"guidelines",children:[],level:2}],m={toc:p};function d(e){var t=e.components,n=(0,o.Z)(e,i);return(0,a.mdx)("wrapper",(0,r.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,a.mdx)("p",null,"This page contains Best Practice guidelines for styling your code."),(0,a.mdx)("h2",{id:"guidelines"},"Guidelines"),(0,a.mdx)("ul",null,(0,a.mdx)("li",{parentName:"ul"},(0,a.mdx)("strong",{parentName:"li"},"Components"),":",(0,a.mdx)("ul",{parentName:"li"},(0,a.mdx)("li",{parentName:"ul"},"Name your specs consistently with ",(0,a.mdx)("em",{parentName:"li"},"NAMEComponentSpec")," to generate a component called ",(0,a.mdx)("em",{parentName:"li"},"NAMEComponent"),"."),(0,a.mdx)("li",{parentName:"ul"},"The ",(0,a.mdx)("em",{parentName:"li"},"ComponentContext")," argument should be simply called ",(0,a.mdx)("inlineCode",{parentName:"li"},"c")," to make your layout code less verbose and more readable."))),(0,a.mdx)("li",{parentName:"ul"},(0,a.mdx)("strong",{parentName:"li"},"Resource Types")," - where appropriate, use resource types, such as ",(0,a.mdx)("inlineCode",{parentName:"li"},"ResType.STRING"),", ",(0,a.mdx)("inlineCode",{parentName:"li"},"ResType.COLOR"),", ",(0,a.mdx)("inlineCode",{parentName:"li"},"ResType.DIMEN_SIZE"),", to make it easier to set prop values from Android resources."),(0,a.mdx)("li",{parentName:"ul"},(0,a.mdx)("strong",{parentName:"li"},"Props"),":",(0,a.mdx)("ul",{parentName:"li"},(0,a.mdx)("li",{parentName:"ul"},"Declare all required props first then optional ones (",(0,a.mdx)("inlineCode",{parentName:"li"},"optional = true"),")."),(0,a.mdx)("li",{parentName:"ul"},"Declare common props (props defined for all Components on ",(0,a.mdx)("inlineCode",{parentName:"li"},"Component.Builder"),") after the component's own props."))),(0,a.mdx)("li",{parentName:"ul"},(0,a.mdx)("strong",{parentName:"li"},"Enums")," - use static imports on all layout enums (such as ",(0,a.mdx)("inlineCode",{parentName:"li"},"YogaEdge"),", ",(0,a.mdx)("inlineCode",{parentName:"li"},"YogaAlign"),", ",(0,a.mdx)("inlineCode",{parentName:"li"},"YogaJustify"),") to reduce your layout code and make it more readable."),(0,a.mdx)("li",{parentName:"ul"},(0,a.mdx)("strong",{parentName:"li"},"Conditionals")," - use inline conditionals on optional children to keep the layout construction code fluent if possible."),(0,a.mdx)("li",{parentName:"ul"},(0,a.mdx)("strong",{parentName:"li"},"Child Container")," - if you are constructing a child container, add the container in the following line. This gives the code a layout like construction."),(0,a.mdx)("li",{parentName:"ul"},"Lifecycle methods, such as ",(0,a.mdx)("inlineCode",{parentName:"li"},"@OnCreateLayout"),", are static and package-private.")),(0,a.mdx)("p",null,"The following snippet is an example of an application of the Litho Best Practice coding style:"),(0,a.mdx)("pre",null,(0,a.mdx)("code",{parentName:"pre",className:"language-java"},"@LayoutSpec\nclass MyComponentSpec {\n\n  @OnCreateLayout\n  static Component onCreateLayout(\n      ComponentContext c,\n      @Prop(resType = STRING) String title,\n      @Prop(optional = true) Drawable image) {\n\n  return Row.create(c)\n      .alignItems(CENTER)\n      .paddingRes(R.dimen.some_dimen)\n      .child(\n          Image.create(c)\n              .drawable(image)\n              .width(40)\n              .height(40)\n              .marginRes(RIGHT, R.dimen.my_margin))\n      .child(TextUtils.isEmpty(title) ? null :\n          Text.create(c)\n              .text(title)\n              .textColorAttr(R.attr.textColorTertiary)\n              .marginDip(5)\n              .flexGrow(1f))\n      .build();\n  }\n}\n")))}d.isMDXComponent=!0}}]);