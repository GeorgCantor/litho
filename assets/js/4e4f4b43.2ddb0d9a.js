"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[9519],{3905:(e,n,t)=>{t.r(n),t.d(n,{MDXContext:()=>m,MDXProvider:()=>c,mdx:()=>h,useMDXComponents:()=>p,withMDXComponents:()=>d});var o=t(67294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function r(){return r=Object.assign||function(e){for(var n=1;n<arguments.length;n++){var t=arguments[n];for(var o in t)Object.prototype.hasOwnProperty.call(t,o)&&(e[o]=t[o])}return e},r.apply(this,arguments)}function l(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);n&&(o=o.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,o)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?l(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):l(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,o,a=function(e,n){if(null==e)return{};var t,o,a={},r=Object.keys(e);for(o=0;o<r.length;o++)t=r[o],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(o=0;o<r.length;o++)t=r[o],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var m=o.createContext({}),d=function(e){return function(n){var t=p(n.components);return o.createElement(e,r({},n,{components:t}))}},p=function(e){var n=o.useContext(m),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},c=function(e){var n=p(e.components);return o.createElement(m.Provider,{value:n},e.children)},u={inlineCode:"code",wrapper:function(e){var n=e.children;return o.createElement(o.Fragment,{},n)}},f=o.forwardRef((function(e,n){var t=e.components,a=e.mdxType,r=e.originalType,l=e.parentName,m=s(e,["components","mdxType","originalType","parentName"]),d=p(t),c=a,f=d["".concat(l,".").concat(c)]||d[c]||u[c]||r;return t?o.createElement(f,i(i({ref:n},m),{},{components:t})):o.createElement(f,i({ref:n},m))}));function h(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var r=t.length,l=new Array(r);l[0]=f;var i={};for(var s in n)hasOwnProperty.call(n,s)&&(i[s]=n[s]);i.originalType=e,i.mdxType="string"==typeof e?e:a,l[1]=i;for(var m=2;m<r;m++)l[m]=t[m];return o.createElement.apply(null,l)}return o.createElement.apply(null,t)}f.displayName="MDXCreateElement"},13919:(e,n,t)=>{function o(e){return!0===/^(\w*:|\/\/)/.test(e)}function a(e){return void 0!==e&&!o(e)}t.d(n,{b:()=>o,Z:()=>a})},44996:(e,n,t)=>{t.r(n),t.d(n,{useBaseUrlUtils:()=>r,default:()=>l});var o=t(52263),a=t(13919);function r(){var e=(0,o.default)().siteConfig,n=(e=void 0===e?{}:e).baseUrl,t=void 0===n?"/":n,r=e.url;return{withBaseUrl:function(e,n){return function(e,n,t,o){var r=void 0===o?{}:o,l=r.forcePrependBaseUrl,i=void 0!==l&&l,s=r.absolute,m=void 0!==s&&s;if(!t)return t;if(t.startsWith("#"))return t;if((0,a.b)(t))return t;if(i)return n+t;var d=t.startsWith(n)?t:n+t.replace(/^\//,"");return m?e+d:d}(r,t,e,n)}}}function l(e,n){return void 0===n&&(n={}),(0,r().withBaseUrl)(e,n)}},58215:(e,n,t)=>{t.r(n),t.d(n,{default:()=>a});var o=t(67294);const a=function(e){var n=e.children,t=e.hidden,a=e.className;return o.createElement("div",{role:"tabpanel",hidden:t,className:a},n)}},55064:(e,n,t)=>{t.r(n),t.d(n,{default:()=>c});var o=t(87462),a=t(67294),r=t(72389),l=t(79443);const i=function(){var e=(0,a.useContext)(l.Z);if(null==e)throw new Error('"useUserPreferencesContext" is used outside of "Layout" component.');return e};var s=t(83039),m=t(86010);const d="tabItem_1uMI";function p(e){var n,t,o,r=e.lazy,l=e.block,p=e.defaultValue,c=e.values,u=e.groupId,f=e.className,h=a.Children.map(e.children,(function(e){if((0,a.isValidElement)(e)&&void 0!==e.props.value)return e;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')})),v=null!=c?c:h.map((function(e){var n=e.props;return{value:n.value,label:n.label}})),x=(0,s.duplicates)(v,(function(e,n){return e.value===n.value}));if(x.length>0)throw new Error('Docusaurus error: Duplicate values "'+x.map((function(e){return e.value})).join(", ")+'" found in <Tabs>. Every value needs to be unique.');var y=null===p?p:null!=(n=null!=p?p:null==(t=h.find((function(e){return e.props.default})))?void 0:t.props.value)?n:null==(o=h[0])?void 0:o.props.value;if(null!==y&&!v.some((function(e){return e.value===y})))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+y+'" but none of its children has the corresponding value. Available values are: '+v.map((function(e){return e.value})).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");var g=i(),b=g.tabGroupChoices,w=g.setTabGroupChoices,C=(0,a.useState)(y),k=C[0],N=C[1],P=[],T=(0,s.useScrollPositionBlocker)().blockElementScrollPositionUntilNextRender;if(null!=u){var S=b[u];null!=S&&S!==k&&v.some((function(e){return e.value===S}))&&N(S)}var O=function(e){var n=e.currentTarget,t=P.indexOf(n),o=v[t].value;o!==k&&(T(n),N(o),null!=u&&w(u,o))},_=function(e){var n,t=null;switch(e.key){case"ArrowRight":var o=P.indexOf(e.currentTarget)+1;t=P[o]||P[0];break;case"ArrowLeft":var a=P.indexOf(e.currentTarget)-1;t=P[a]||P[P.length-1]}null==(n=t)||n.focus()};return a.createElement("div",{className:"tabs-container"},a.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,m.default)("tabs",{"tabs--block":l},f)},v.map((function(e){var n=e.value,t=e.label;return a.createElement("li",{role:"tab",tabIndex:k===n?0:-1,"aria-selected":k===n,className:(0,m.default)("tabs__item",d,{"tabs__item--active":k===n}),key:n,ref:function(e){return P.push(e)},onKeyDown:_,onFocus:O,onClick:O},null!=t?t:n)}))),r?(0,a.cloneElement)(h.filter((function(e){return e.props.value===k}))[0],{className:"margin-vert--md"}):a.createElement("div",{className:"margin-vert--md"},h.map((function(e,n){return(0,a.cloneElement)(e,{key:n,hidden:e.props.value!==k})}))))}function c(e){var n=(0,r.default)();return a.createElement(p,(0,o.Z)({key:String(n)},e))}},72649:(e,n,t)=>{t.r(n),t.d(n,{frontMatter:()=>s,contentTitle:()=>m,metadata:()=>d,toc:()=>p,default:()=>u});var o=t(87462),a=t(63366),r=(t(67294),t(3905)),l=t(44996),i=(t(55064),t(58215),["components"]),s={id:"first-components",title:"Components and Props"},m=void 0,d={unversionedId:"tutorial/first-components",id:"tutorial/first-components",isDocsHomePage:!1,title:"Components and Props",description:"In this part of the tutorial, you'll learn the basic Litho building blocks, write a simple component,",source:"@site/../docs/tutorial/first-components.md",sourceDirName:"tutorial",slug:"/tutorial/first-components",permalink:"/docs/tutorial/first-components",editUrl:"https://github.com/facebook/litho/edit/master/website/../docs/tutorial/first-components.md",tags:[],version:"current",frontMatter:{id:"first-components",title:"Components and Props"},sidebar:"mainSidebar",previous:{title:"Setting up the project",permalink:"/docs/tutorial/project-setup"},next:{title:"Adding State",permalink:"/docs/tutorial/adding-state"}},p=[{value:"Hello World!",id:"hello-world",children:[{value:"Key Points:",id:"key-points",children:[],level:3}],level:2},{value:"First KComponent",id:"first-kcomponent",children:[{value:"Key Points:",id:"key-points-1",children:[],level:3}],level:2},{value:"Introducing Layout",id:"introducing-layout",children:[{value:"Key Points:",id:"key-points-2",children:[],level:3}],level:2}],c={toc:p};function u(e){var n=e.components,t=(0,a.Z)(e,i);return(0,r.mdx)("wrapper",(0,o.Z)({},c,t,{components:n,mdxType:"MDXLayout"}),(0,r.mdx)("p",null,"In this part of the tutorial, you'll learn the basic Litho building blocks, write a simple component,\nextend it to accept ",(0,r.mdx)("a",{parentName:"p",href:"/docs/kotlin/kotlin-api-basics#props"},"props")," and get familiar with building layouts with ",(0,r.mdx)("a",{parentName:"p",href:"/docs/kotlin/kotlin-flexbox-containers"},"Flexbox")," in Litho."),(0,r.mdx)("h2",{id:"hello-world"},"Hello World!"),(0,r.mdx)("p",null,'To display a "Hello World!" text on the screen with Litho you need to integrate Litho component\nhierarchy into your View hierarchy.'),(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-kotlin",metastring:"file=sample/src/main/java/com/facebook/samples/litho/onboarding/MyActivity.kt start=start_example end=end_example",file:"sample/src/main/java/com/facebook/samples/litho/onboarding/MyActivity.kt",start:"start_example",end:"end_example"},'import android.os.Bundle\nimport androidx.appcompat.app.AppCompatActivity\nimport com.facebook.litho.Component\nimport com.facebook.litho.ComponentScope\nimport com.facebook.litho.KComponent\nimport com.facebook.litho.LithoView\nimport com.facebook.litho.dp\nimport com.facebook.litho.kotlin.widget.Text\n\nclass MyActivity : AppCompatActivity() {\n\n  override fun onCreate(savedInstanceState: Bundle?) {\n    super.onCreate(savedInstanceState)\n\n    val lithoView = LithoView.create(this /* context */, MyComponent())\n    setContentView(lithoView)\n  }\n}\n\nclass MyComponent() : KComponent() {\n  override fun ComponentScope.render(): Component = Text(text = "Hello, World!", textSize = 50.dp)\n}\n')),(0,r.mdx)("h3",{id:"key-points"},"Key Points:"),(0,r.mdx)("ul",null,(0,r.mdx)("li",{parentName:"ul"},(0,r.mdx)("inlineCode",{parentName:"li"},"LithoView"),": A hierarchy of Litho components is rendered using a LithoView"),(0,r.mdx)("li",{parentName:"ul"},(0,r.mdx)("inlineCode",{parentName:"li"},"Text(...)"),": This is how you create a component, both built-in\nones and components you define yourself."),(0,r.mdx)("li",{parentName:"ul"},(0,r.mdx)("inlineCode",{parentName:"li"},'text = "Hello, World!", textSize = 50.dp'),": ",(0,r.mdx)("inlineCode",{parentName:"li"},"text")," and ",(0,r.mdx)("inlineCode",{parentName:"li"},"textSize")," are ",(0,r.mdx)("strong",{parentName:"li"},"props")," of the Text component \u2013 an input parameters to\nconfigure the component.")),(0,r.mdx)("h2",{id:"first-kcomponent"},"First KComponent"),(0,r.mdx)("p",null,"Welcome to your first Litho component! Previously, you used a built-in ",(0,r.mdx)("inlineCode",{parentName:"p"},"Text")," component but now\nyou'll define your own. Like Text, your new component can also take ",(0,r.mdx)("strong",{parentName:"p"},"props"),". Props configure\na component."),(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-kotlin",metastring:"file=sample/src/main/java/com/facebook/samples/litho/kotlin/documentation/HelloComponent.kt start=start_simple_example end=end_simple_example",file:"sample/src/main/java/com/facebook/samples/litho/kotlin/documentation/HelloComponent.kt",start:"start_simple_example",end:"end_simple_example"},'class HelloComponent(private val name: String) : KComponent() {\n\n  override fun ComponentScope.render(): Component? {\n    return Text(text = "Hello $name!")\n  }\n}\n')),(0,r.mdx)("p",null,"To use your component, you can just replace the Text component from above with your component,\nsetting the ",(0,r.mdx)("inlineCode",{parentName:"p"},"name")," prop:"),(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-kotlin",metastring:"file=sample/src/main/java/com/facebook/samples/litho/onboarding/FirstComponentActivity.kt start=start_example end=end_example",file:"sample/src/main/java/com/facebook/samples/litho/onboarding/FirstComponentActivity.kt",start:"start_example",end:"end_example"},'setContentView(LithoView.create(this, HelloComponent(name = "Linda")))\n')),(0,r.mdx)("h3",{id:"key-points-1"},"Key Points:"),(0,r.mdx)("ul",null,(0,r.mdx)("li",{parentName:"ul"},(0,r.mdx)("inlineCode",{parentName:"li"},"KComponent"),": This is a class that we need to extend in order to create components."),(0,r.mdx)("li",{parentName:"ul"},(0,r.mdx)("inlineCode",{parentName:"li"},"render"),": Function override that returns what your component should render.")),(0,r.mdx)("div",{className:"admonition admonition-tip alert alert--success"},(0,r.mdx)("div",{parentName:"div",className:"admonition-heading"},(0,r.mdx)("h5",{parentName:"div"},(0,r.mdx)("span",{parentName:"h5",className:"admonition-icon"},(0,r.mdx)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,r.mdx)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"tip")),(0,r.mdx)("div",{parentName:"div",className:"admonition-content"},(0,r.mdx)("p",{parentName:"div"},"Lots of code autocompletion and class templates can be found in ",(0,r.mdx)("a",{parentName:"p",href:"/docs/devtools/android-studio-plugin"},"Litho Android Studio plugin"),"!"))),(0,r.mdx)("h2",{id:"introducing-layout"},"Introducing Layout"),(0,r.mdx)("p",null,"Enough of HelloWorlds \u2013 let's get to building our Instagram app!"),(0,r.mdx)("p",null,"Before we start, let's add 2 simple classes to represent ",(0,r.mdx)("inlineCode",{parentName:"p"},"User")," and ",(0,r.mdx)("inlineCode",{parentName:"p"},"Post")," data models:"),(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-kotlin",metastring:"file=sample/src/main/java/com/facebook/samples/litho/onboarding/model/models.kt start=start_example end=end_example",file:"sample/src/main/java/com/facebook/samples/litho/onboarding/model/models.kt",start:"start_example",end:"end_example"},"class User(val username: String, @DrawableRes val avatarRes: Int)\n\nclass Post(\n    val id: String,\n    val user: User,\n    @DrawableRes val imageRes: Int,\n    val text: String? = null\n)\n")),(0,r.mdx)("p",null,"Now it's time for UI work!\nFirst you'll create a component for an Instagram post and that requires layouting 2 images\nand a text in a particular way. Layouts in Litho are defined via the Flexbox API. You can read more\nabout different layouting options in ",(0,r.mdx)("a",{parentName:"p",href:"/docs/mainconcepts/flexbox-yoga"},"Layout with Flexbox"),"\ndoc, but for now it's enough to know that the main Flexbox primitives are ",(0,r.mdx)("strong",{parentName:"p"},"Column")," and ",(0,r.mdx)("strong",{parentName:"p"},"Row"),",\nand they are used to arrange children vertically and horizontally, respectively."),(0,r.mdx)("p",null,"With their help a ",(0,r.mdx)("inlineCode",{parentName:"p"},"Post")," component that will render the UI of an Instagram post will look like that:"),(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-kotlin",metastring:"file=sample/src/main/java/com/facebook/samples/litho/onboarding/PostComponent.kt start=start_example end=end_example",file:"sample/src/main/java/com/facebook/samples/litho/onboarding/PostComponent.kt",start:"start_example",end:"end_example"},"class PostComponent(val post: Post) : KComponent() {\n  override fun ComponentScope.render(): Component {\n    return Column {\n      child(\n          Row {\n            child(Image(drawable = drawableRes(post.user.avatarRes)))\n            child(Text(text = post.user.username, textStyle = Typeface.BOLD))\n          })\n      child(\n          Image(\n              drawable = drawableRes(post.imageRes),\n              scaleType = ImageView.ScaleType.CENTER_CROP,\n              style = Style.aspectRatio(1f)))\n    }\n  }\n}\n")),(0,r.mdx)("p",null,"Though hierarchically components are placed correctly, this doesn't look nice, so, as a final touch\nlet's apply some flexbox styles:"),(0,r.mdx)("pre",null,(0,r.mdx)("code",{parentName:"pre",className:"language-kotlin",metastring:"file=sample/src/main/java/com/facebook/samples/litho/onboarding/PostStyledKComponent.kt start=start_example end=end_example",file:"sample/src/main/java/com/facebook/samples/litho/onboarding/PostStyledKComponent.kt",start:"start_example",end:"end_example"},"class PostStyledKComponent(val post: Post) : KComponent() {\n  override fun ComponentScope.render(): Component {\n    return Column {\n      child(\n          Row(alignItems = YogaAlign.CENTER, style = Style.padding(all = 8.dp)) {\n            child(\n                Image(\n                    drawable = drawableRes(post.user.avatarRes),\n                    style = Style.width(36.dp).height(36.dp).margin(start = 4.dp, end = 8.dp)))\n            child(Text(text = post.user.username, textStyle = Typeface.BOLD))\n          })\n      child(\n          Image(\n              drawable = drawableRes(post.imageRes),\n              scaleType = ImageView.ScaleType.CENTER_CROP,\n              style = Style.aspectRatio(1f)))\n    }\n  }\n}\n")),(0,r.mdx)("p",null,"Your component should look like the following image."),(0,r.mdx)("img",{src:(0,l.default)("/images/simple_component_tutorial.png"),width:"200px",className:"white-background"}),(0,r.mdx)("h3",{id:"key-points-2"},"Key Points:"),(0,r.mdx)("ul",null,(0,r.mdx)("li",{parentName:"ul"},(0,r.mdx)("inlineCode",{parentName:"li"},"Column")," and ",(0,r.mdx)("inlineCode",{parentName:"li"},"Row"),": The key container types in Litho. They stack children vertically and\nhorizontally, respectively."),(0,r.mdx)("li",{parentName:"ul"},(0,r.mdx)("inlineCode",{parentName:"li"},"padding")," and ",(0,r.mdx)("inlineCode",{parentName:"li"},"margin"),": Are the props that set padding and margin using ",(0,r.mdx)("inlineCode",{parentName:"li"},"Dimen")," (a class that represents dimension values in different Android units: ",(0,r.mdx)("inlineCode",{parentName:"li"},"Px"),", ",(0,r.mdx)("inlineCode",{parentName:"li"},"Dp"),", and ",(0,r.mdx)("inlineCode",{parentName:"li"},"Sp"),")."),(0,r.mdx)("li",{parentName:"ul"},(0,r.mdx)("inlineCode",{parentName:"li"},"drawableRes"),": Returns an Android Drawable from resource ID."),(0,r.mdx)("li",{parentName:"ul"},(0,r.mdx)("inlineCode",{parentName:"li"},"Image"),": Image is another built-in component that can render a drawable.")))}u.isMDXComponent=!0}}]);